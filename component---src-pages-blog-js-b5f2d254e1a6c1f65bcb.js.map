{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["__webpack_exports__","_ref3","data","console","log","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_rebass_grid___WEBPACK_IMPORTED_MODULE_6__","p","flexWrap","mt","width","react_helmet__WEBPACK_IMPORTED_MODULE_5__","charSet","site","siteMetadata","title","rel","target","href","allMarkdownRemark","edges","map","_ref4","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","css","_ref","rhythm","frontmatter","_ref2","date","excerpt","query"],"mappings":"8TAQeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEd,OADAC,QAAQC,IAAIF,GAERG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,EAAAD,CAACG,EAAA,KAAD,CAAMC,EAAG,EAAGC,SAAS,OAAOC,GAAI,EAAGC,MAAO,GACtCP,OAAAC,EAAA,EAAAD,CAACQ,EAAA,OAAD,KACIR,OAAAC,EAAA,EAAAD,CAAA,QAAMS,QAAQ,UACdT,OAAAC,EAAA,EAAAD,CAAA,aAAQH,EAAKa,KAAKC,aAAaC,OAC/BZ,OAAAC,EAAA,EAAAD,CAAA,QAAMa,IAAI,GAAGC,OAAO,SAASC,KAAK,uCAErClB,EAAKmB,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAC9BpB,OAAAC,EAAA,EAAAD,CAAA,OAAKqB,IAAKD,EAAKE,IACXtB,OAAAC,EAAA,EAAAD,CAACuB,EAAA,KAAD,CACIC,GAAIJ,EAAKK,OAAOC,KAChBC,IAAGC,GAMH5B,OAAAC,EAAA,EAAAD,CAAA,KACI2B,IAAKA,YAAF,iBACFE,YAAO,KADL,MAIFT,EAAKU,YAAYlB,MAAO,IACzBZ,OAAAC,EAAA,EAAAD,CAAA,QACI2B,IAAGI,GADP,KAMbX,EAAKU,YAAYE,OAGRhC,OAAAC,EAAA,EAAAD,CAAA,SAAIoB,EAAKa,gBAS9B,IAAMC,EAAK","file":"component---src-pages-blog-js-b5f2d254e1a6c1f65bcb.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport { Helmet } from \"react-helmet\"\nimport { Flex, Box} from \"@rebass/grid/\"\n\nexport default ({ data }) => {\n    console.log(data)\n    return (\n        <Layout>\n            <Flex p={5} flexWrap='wrap' mt={1} width={1}>\n                <Helmet>\n                    <meta charSet=\"utf-8\" />\n                    <title>{data.site.siteMetadata.title}</title>\n                    <link rel=\"\" target=\"_blank\" href=\"http://twitter.com/positivneutron\" />\n                </Helmet>\n                {data.allMarkdownRemark.edges.map(({ node }) => (\n                    <div key={node.id}>\n                        <Link\n                            to={node.fields.slug}\n                            css={css`\n                text-decoration: none;\n                color: inherit;\n              `\n                            }\n                        >\n                            <b\n                                css={css`\n                margin-bottom: ${rhythm(1 / 4)};\n              `}\n                            >\n                                {node.frontmatter.title}{\" \"}\n                                <span\n                                    css={css`\n                  color: #bbb;\n                  font-weight: normal;\n                `}\n                                >\n                â€” {node.frontmatter.date}\n              </span>\n                            </b>\n                            <p>{node.excerpt}</p>\n                        </Link>\n                    </div>\n                ))}\n            </Flex>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title        \n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}