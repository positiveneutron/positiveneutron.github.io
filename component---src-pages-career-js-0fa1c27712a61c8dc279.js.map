{"version":3,"sources":["webpack:///./src/pages/career.js"],"names":["__webpack_exports__","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_rebass_grid___WEBPACK_IMPORTED_MODULE_6__","p","flexWrap","mt","width","react_helmet__WEBPACK_IMPORTED_MODULE_5__","charSet","site","siteMetadata","title","rel","target","href","allSrcJson","edges","node","workingExperience","map","index","key","period","dangerouslySetInnerHTML","__html","description","query"],"mappings":"gMAQeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEd,OACIC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,EAAAD,CAACG,EAAA,KAAD,CAAMC,EAAG,EAAGC,SAAS,OAAOC,GAAI,EAAGC,MAAO,GACtCP,OAAAC,EAAA,EAAAD,CAACQ,EAAA,OAAD,KACIR,OAAAC,EAAA,EAAAD,CAAA,QAAMS,QAAQ,UACdT,OAAAC,EAAA,EAAAD,CAAA,aAAQD,EAAKW,KAAKC,aAAaC,MAA/B,yBACAZ,OAAAC,EAAA,EAAAD,CAAA,QAAMa,IAAI,GAAGC,OAAO,SAASC,KAAK,uCAErChB,EAAKiB,WAAWC,MAAM,GAAGC,KAAKC,kBAAkBC,IAAI,SAACF,EAAMG,GAAP,OAErDrB,OAAAC,EAAA,EAAAD,CAACG,EAAA,IAAD,CAAKI,MAAO,EAAGe,IAAKD,GAChBrB,OAAAC,EAAA,EAAAD,CAAA,SAAIkB,EAAKK,QACTvB,OAAAC,EAAA,EAAAD,CAAA,WACAA,OAAAC,EAAA,EAAAD,CAAA,OAAKwB,wBAAyB,CAAEC,OAAQP,EAAKQ,eAC7C1B,OAAAC,EAAA,EAAAD,CAAA,iBAQb,IAAM2B,EAAK","file":"component---src-pages-career-js-0fa1c27712a61c8dc279.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport { Helmet } from \"react-helmet\"\nimport { Flex, Box} from \"@rebass/grid/\"\n\nexport default ({ data }) => {\n    //console.log(JSON.stringify(data))\n    return (\n        <Layout>\n            <Flex p={5} flexWrap='wrap' mt={1} width={1}>\n                <Helmet>\n                    <meta charSet=\"utf-8\" />\n                    <title>{data.site.siteMetadata.title} | Working Experience</title>\n                    <link rel=\"\" target=\"_blank\" href=\"http://twitter.com/positivneutron\" />\n                </Helmet>\n                {data.allSrcJson.edges[0].node.workingExperience.map((node, index) => (\n\n                <Box width={1} key={index}>\n                    <b>{node.period}</b>\n                    <br/>\n                    <div dangerouslySetInnerHTML={{ __html: node.description }} />\n                    <br/>\n                </Box>\n                ))}\n            </Flex>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title        \n      }\n    }\n    allSrcJson{\n    edges{\n      node{\n        workingExperience{\n            period\n            description\n        }\n      }\n    }\n  }\n  }\n`"],"sourceRoot":""}