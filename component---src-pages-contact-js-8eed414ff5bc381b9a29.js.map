{"version":3,"sources":["webpack:///./src/pages/contact.js"],"names":["__webpack_exports__","_ref","data","console","log","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_rebass_grid___WEBPACK_IMPORTED_MODULE_6__","p","flexWrap","mt","width","react_helmet__WEBPACK_IMPORTED_MODULE_5__","charSet","site","siteMetadata","title","rel","target","href","allSrcJson","edges","node","contact","map","index","platform","dangerouslySetInnerHTML","__html","query"],"mappings":"gMAQeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEd,OADAC,QAAQC,IAAIF,GAERG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACIF,OAAAC,EAAA,EAAAD,CAACG,EAAA,KAAD,CAAMC,EAAG,EAAGC,SAAS,OAAOC,GAAI,EAAGC,MAAO,GACtCP,OAAAC,EAAA,EAAAD,CAACQ,EAAA,OAAD,KACIR,OAAAC,EAAA,EAAAD,CAAA,QAAMS,QAAQ,UACdT,OAAAC,EAAA,EAAAD,CAAA,aAAQH,EAAKa,KAAKC,aAAaC,MAA/B,cACAZ,OAAAC,EAAA,EAAAD,CAAA,QAAMa,IAAI,GAAGC,OAAO,SAASC,KAAK,uCAErClB,EAAKmB,WAAWC,MAAM,GAAGC,KAAKC,QAAQC,IAAI,SAACF,EAAMG,GAAP,OAC3CrB,OAAAC,EAAA,EAAAD,CAACG,EAAA,IAAD,CAAKI,MAAO,GACRP,OAAAC,EAAA,EAAAD,CAAA,SACIA,OAAAC,EAAA,EAAAD,CAAA,SAAIkB,EAAKI,UACTtB,OAAAC,EAAA,EAAAD,CAAA,WACAA,OAAAC,EAAA,EAAAD,CAAA,OAAKuB,wBAAyB,CAAEC,OAAQN,EAAKR,eAS9D,IAAMe,EAAK","file":"component---src-pages-contact-js-8eed414ff5bc381b9a29.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\nimport { Helmet } from \"react-helmet\"\nimport { Flex, Box} from \"@rebass/grid/\"\n\nexport default ({ data }) => {\n    console.log(data)\n    return (\n        <Layout>\n            <Flex p={5} flexWrap='wrap' mt={1} width={1}>\n                <Helmet>\n                    <meta charSet=\"utf-8\" />\n                    <title>{data.site.siteMetadata.title} | Contact</title>\n                    <link rel=\"\" target=\"_blank\" href=\"http://twitter.com/positivneutron\" />\n                </Helmet>\n                {data.allSrcJson.edges[0].node.contact.map((node, index) => (\n                <Box width={1}>\n                    <p>\n                        <b>{node.platform}</b>\n                        <br/>\n                        <div dangerouslySetInnerHTML={{ __html: node.site }} />\n                    </p>\n                </Box>\n                ))}\n            </Flex>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title        \n      }\n    }\n    allSrcJson{\n    edges{\n      node{\n        contact{\n            platform\n            site\n        }\n      }\n    }\n  }\n  }\n`"],"sourceRoot":""}